CREATE TABLE IF NOT EXISTS mpa_rating (
    mpa_id      INT PRIMARY KEY,
    mpa_name        VARCHAR(10) NOT NULL UNIQUE,
    description VARCHAR(200)
);


CREATE TABLE IF NOT EXISTS genre (
    genre_id INT PRIMARY KEY,
    name     VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users (
    user_id  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(50) NOT NULL UNIQUE,
    login    VARCHAR(50) NOT NULL,
    name     VARCHAR(50),
    birthday DATE
);

CREATE TABLE IF NOT EXISTS films (
    film_id       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          VARCHAR(100) NOT NULL,
    description   VARCHAR(200),
    release_date  DATE         NOT NULL,
    duration      INT          NOT NULL CHECK (duration > 0)
);

CREATE TABLE IF NOT EXISTS friendship (
    user_id INT NOT NULL,
    friend_id INT NOT NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'PENDING',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CHECK (status IN ('PENDING', 'CONFIRMED')),
    CHECK (user_id != friend_id)
    );

CREATE TABLE IF NOT EXISTS film_genre (
    film_id  INT REFERENCES films (film_id) ON DELETE CASCADE,
    genre_id INT REFERENCES genre (genre_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS film_mpa (
    film_id  INT REFERENCES films (film_id) ON DELETE CASCADE,
    mpa_id INT REFERENCES mpa_rating (mpa_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, mpa_id)
);


CREATE TABLE IF NOT EXISTS film_likes (
    film_id INT REFERENCES films (film_id) ON DELETE CASCADE,
    user_id INT REFERENCES users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS reviews (
    review_id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     TEXT NOT NULL,
    is_positive BOOLEAN NOT NULL,
    user_id     INT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    film_id     INT NOT NULL REFERENCES films(film_id) ON DELETE CASCADE,
    useful      INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS review_likes (
    review_id INT NOT NULL REFERENCES reviews(review_id) ON DELETE CASCADE,
    user_id   INT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    is_like   BOOLEAN NOT NULL,
    PRIMARY KEY (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS directors (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_directors (
    film_id     INT NOT NULL REFERENCES films(film_id) ON DELETE CASCADE,
    id INT NOT NULL REFERENCES directors(id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, id)
);

CREATE TABLE IF NOT EXISTS feed (
    event_id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id    INT NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    event_type VARCHAR(10) NOT NULL CHECK (event_type IN ('LIKE', 'REVIEW', 'FRIEND')),
    operation  VARCHAR(10) NOT NULL CHECK (operation IN ('ADD', 'REMOVE', 'UPDATE')),
    entity_id  INT NOT NULL,
    timestamp  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);